Advanced Python Programming
Trainer: Prashant Nair
===========================================================================================================================================================

Agenda
--------
Django Templates
Django Template Language
Namespacing and Removing Hardcoded URL

Lab1: Reading data from table in a view
==========================================

views.py on food app
====================

from django.shortcuts import render
from django.http import HttpResponse
from .models import Item

# Create your views here.

def index(request):
    item_list= Item.objects.all()
    return HttpResponse(item_list)

def prashant(request):
    pass

def item(request):
    return HttpResponse("This is an item page")


models.py in food app
======================

from django.db import models

# Create your models here.

class Item(models.Model):

    def __str__(self):
        return self.item_name

    item_name= models.CharField(max_length=200) #varchar(200)
    item_desc=models.CharField(max_length=200) #varchar(200)
    item_price=models.IntegerField() #int






Templates
===========

DTL ---- Django Template Language

variables =========== {{ variableName }}

Tags ================ {% %}


Lab2: Creating templates folder
==================================

Create templates folder inside food app
Create food folder inside templates folder
Add index.html page inside food folder

Modify views.py in food app

def index(request):
    return render(request, 'food/index.html')


Lab3: Creating and using Context Variable
===========================================

context variable is a dictionary object

views.py

from django.shortcuts import render
from django.http import HttpResponse
from .models import Item

# Create your views here.

def index(request):
    context = {
        'name' : 'Prashant',
        'messages' : ['Welcome to Django Template Language', ' Test1', 'Test2']
    }
    return render(request, 'food/index.html', context)


index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome {{ name }}</title>
</head>
<body>
    <h1>This is a sample page</h1>
    <ul>
        {% for message in messages %}
        <li> {{ message }} </li>
    {% endfor %}

    </ul>
    
</body>
</html>


Lab4: Accessing elements dynamically
======================================

Demo1: Using variable values from URL

views.py

from django.shortcuts import render,redirect
from django.http import HttpResponse
from .models import Item
from django.template import loader



def detail(request, item_id):
	return HttpResponse("This is item no : %s" % item_id)


urls.py (food app)

from django.urls import path
from . import views

urlpatterns=[
    #http://127.0.0.1:8000/food
    path('',views.index, name="index"),
    #http://127.0.0.1:8000/food/items
    path('item/',views.item, name="items"),
    #http://127.0.0.1:8000/food/1
    path('<int:item_id>',views.detail, name="detail")
]






















Advanced Python Dev
Trainer: Prashant Nair
======================================================================================================================================

Agenda
------

Removal of Hard coded URL
Adding static files (e.g. css)
Working with Nav Bar
Creating a Base Template
Adding Image Field to Model and Template
Creating Forms in Django
	- Add new items
	- Editing existing items
	- Deleting items
Authentication in Django
	- Creating Registration Form
	- Adding Success Message
	- Saving Data from registration form
	- Customizing Registration form
	- Logging in Users
	- Redirect RegisteredUsers
	- Logout Functionality



Adding static css file
=====================================================================

1. Create a folder named static in food app with the following structure

	static/food/style.css
2. 

style.css

body{
    background-color: lightyellow;
}

index.html 

{% load static %}

<!DOCTYPE html>
<html lang="en">
<head>
       <link rel="stylesheet" href="{% static 'food\style.css' %}">

    <title>Test</title>
</head>
<body>

 {% for item in item_list %}
        
                <a href={{ url 'detail' 'item.id'}}> {{ item.id }} ---  {{ item.item_name }}</a>
                
 {% endfor %}


</body>
</html>


Adding Nav Bar
================

1. Edit urls.py in food app

app_name='food'

2. edit index.html

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
       <link rel="stylesheet" href="{% static 'food\style.css' %}">

    <title>Test</title>
</head>
<body>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <nav class="navbar navbar-dark bg-dark">
        <a href="#" class="navbar-brand">Food App</a>

	<div class="navbar">
            <a class="nav-item  nav-link" href="#">Add Item</a>
            <a class="nav-item  nav-link" href="#">Delete Item</a>
            <a class="nav-item  nav-link" href="#">View Item</a>
          
        </div>
	</nav>

{% for item in messages %}
        
                <a href={% url 'food:detail' item.id %}> {{ item.id }} ---  {{ item.item_name }}</a>
                
 {% endfor %}


</body>
</html>

------------------------------------------------------------------------
detail.html

<h1>{{ itemDetails.item_name }}</h1>
<h2>{{ itemDetails.item_desc }}</h2>
<h3>{{ itemDetails.item_price }}</h3>



=========================================================================================================================

base.html


{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <!--
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


    -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
       <link rel="stylesheet" href="{% static 'food\style.css' %}">

    <title>Test</title>
</head>
<body>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>


    <nav class="navbar navbar-dark bg-dark">
        <a href="#" class="navbar-brand">Food App</a>

        <div class="navbar">
            <a class="nav-item  nav-link" href="#">Add Item</a>
            <a class="nav-item  nav-link" href="#">Delete Item</a>
            <a class="nav-item  nav-link" href="#">View Item</a>
        </div>
    </nav>

{% block body %}
{% endblock %}

</body>
</html>



index.html

{% extends 'food/base.html' %}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Test</title>
</head>
<body>

    {% block body %}

{% for item in messages %}
        
                <a href="{% url 'food:detail' item.id %}"> {{ item.id }} ---  {{ item.item_name }}</a>
                
 {% endfor %}

</body>
</html>


detail.html

{% extends 'food/base.html' %}


{% block body %}
<h1>{{ item.item_name }}</h1>
<h2>{{ item.item_desc }}</h2>
<h3>$ {{ item.item_price }}</h3>
{% endblock %}


Adding Image Field to Model
============================

models.py
----------

from django.db import models

# Create your models here.

class Item(models.Model):
    
    def __str__(self) -> str:
        return self.item_name


    item_name = models.CharField(max_length=200)
    item_desc = models.CharField(max_length=200)
    item_price = models.IntegerField()
    item_image = models.CharField(max_length=500, default="https://livingstonbagel.com/wp-content/uploads/2016/11/food-placeholder.jpg")

=================================================================================
python manage.py makemigrations food

python manage.py sqlmigrate food 0002

python manage.py migrate

python manage.py runserver

Now check in admin page if the image field exists or not
=================================================================================

